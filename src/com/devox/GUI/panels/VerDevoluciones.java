/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.devox.GUI.panels;

import com.devox.GUI.Cargando;
import com.devox.LOG.cuadricula.ListaCuadriculas;
import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JLabel;
import org.inspira.devox.services.devolucion.AccionesDevolucion;
import org.jdesktop.swingx.JXSearchField;

/**
 *
 * @author azaraf
 */
public class VerDevoluciones extends javax.swing.JPanel {

    private AccionesDevolucion accionesDevolucion;
    public static int segregacion = 0, dictamen = 0, captura = 0, entregado = 0;
    private int quantity;
    private JXSearchField searchField;
//    private FolioJoinSucursal sucursal;

    /**
     * Creates new form VerDevoluciones
     *
     * @param frame
     */
    public VerDevoluciones(JFrame frame) {
        initComponents();
        quantity = (Integer) spinner.getValue();
        loading = new Cargando(frame);
        accionesDevolucion = new AccionesDevolucion();
        accionesDevolucion.loadDatabaseInstances();
        CargandoDevoluciones cargandoDevoluciones = new CargandoDevoluciones();
        (new Thread(cargandoDevoluciones)).start();

        //llenarPanel(panelSegregacion, lista);
        jScrollPane1.getHorizontalScrollBar().setUnitIncrement(20);
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(20);
        segregacion = ListaDeDevoluciones.getCantidadSegregados();
        dictamen = ListaDeDevoluciones.getCantidadDictaminados();
        captura = ListaDeDevoluciones.getCantidadCapturados();
        entregado = ListaDeDevoluciones.getCantidadEntregados();

        searchField = new JXSearchField("Buscar");
        searchField.setSize(190, 30);
        searchField.setInstantSearchDelay(100);
        searchField.setSearchMode(JXSearchField.SearchMode.INSTANT);
        searchField.setLayoutStyle(JXSearchField.LayoutStyle.VISTA);
        searchField.setPromptFontStyle(Font.ITALIC);

        searchField.addActionListener((ActionEvent e) -> {
            searchFieldActionListener(e);
        });
        searchField.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                searchFieldKeyTypedListener(e);
            }

            @Override
            public void keyPressed(KeyEvent e) {
                searchFieldKeyPressedListener(e);
            }

            @Override
            public void keyReleased(KeyEvent e) {
                searchFieldKeyReleasedListener(e);
            }
        });

        jPanel2.add(searchField, BorderLayout.WEST);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelSegregacion = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        spinner = new javax.swing.JSpinner();
        botonSelectRange2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        jFrame1.setTitle("Seleccione rango de fechas");
        jFrame1.setBackground(new java.awt.Color(250, 250, 250));
        jFrame1.setMinimumSize(new java.awt.Dimension(320, 180));
        jFrame1.setPreferredSize(new java.awt.Dimension(320, 180));
        jFrame1.setSize(new java.awt.Dimension(320, 180));

        jPanel3.setBackground(new java.awt.Color(250, 250, 250));

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDateChooser2.setBackground(new java.awt.Color(250, 250, 250));

        jDateChooser1.setBackground(new java.awt.Color(250, 250, 250));

        jLabel1.setText("De:");

        jLabel2.setText("A:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(10, 10, 10)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(250, 250, 250));
        setMinimumSize(new java.awt.Dimension(720, 400));
        setPreferredSize(new java.awt.Dimension(720, 400));

        panel1.setBackground(new java.awt.Color(250, 250, 250));
        panel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Devoluciones", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(50, 50, 50))); // NOI18N
        panel1.setPreferredSize(new java.awt.Dimension(720, 300));

        panelSegregacion.setBackground(new java.awt.Color(250, 250, 250));
        panelSegregacion.setLayout(new java.awt.GridLayout(0, 1, 10, 5));
        jScrollPane1.setViewportView(panelSegregacion);

        jLabel7.setText("Ver Ãºltimos");

        spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(0), null, Integer.valueOf(1)));
        spinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerStateChanged(evt);
            }
        });

        botonSelectRange2.setText("Ver por fechas");
        botonSelectRange2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectRange2ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 190, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonSelectRange2)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botonSelectRange2))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addGap(70, 70, 70))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Date desde = jDateChooser1.getDate();
        Date hasta = jDateChooser2.getDate();
        jFrame1.setVisible(false);
        seleccionarRangos(desde, hasta);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botonSelectRange2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectRange2ActionPerformed
        jFrame1.setVisible(true);
    }//GEN-LAST:event_botonSelectRange2ActionPerformed

    private void spinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerStateChanged
        // TODO add your handling code here:
        quantity = (Integer) spinner.getValue();
        llenarDatos();
        llenarPanel();
    }//GEN-LAST:event_spinnerStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonSelectRange2;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panelSegregacion;
    private javax.swing.JSpinner spinner;
    // End of variables declaration//GEN-END:variables
    List<CuadriculaLista> lista = new ArrayList<>();
    Cargando loading;

    private void llenarDatos() {
        //lista = ListaDeDevoluciones.getListaL();
//        int y = accionesDevolucion.getEntityInstances().length;
//        int j = 1;
//        for (int i = (y - 1); i > (y - 15); i--) {
//            Shareable s1 = accionesDevolucion.getEntityInstances()[i];
//            Devolucion dev = (Devolucion) s1;
//            CuadriculaLista cd = ListaCuadriculas.getCuadricula(dev.getFolio());
//            loading.setProgreso(j, 15);
//            j++;
//            Log.print("creada la cuadricula " + dev.getFolio());
//            lista.add(cd);
//        }
        ListaCuadriculas.getLastNDevoluciones(lista, quantity);
    }

    private void llenarPanel() {
        panelSegregacion.removeAll();
        int limit = lista.size();
        if (limit >= quantity) {
            for (int i = 0; i < quantity; i++) {
                CuadriculaLista c = lista.get(i);
                c.crearCuadricula();
                panelSegregacion.add(c);
            }
        } else {
            for (int i = 0; i < limit; i++) {
                CuadriculaLista c = lista.get(i);
                c.crearCuadricula();
                panelSegregacion.add(c);
            }
        }

        panelSegregacion.revalidate();
        panelSegregacion.repaint();
        loading.removeLoadingPanel();
    }

    private void seleccionarTodos(List<CuadriculaLista> lista, boolean what) {
        lista.stream().map((c) -> {
            c.setjCheckBox1(what);
            return c;
        }).map((c) -> {
            c.revalidate();
            return c;
        }).forEach((c) -> {
            c.repaint();
        });

    }

    private void seleccionarRangos(Date desde, Date hasta) {
        panelSegregacion.removeAll();
        for (int i = lista.size() - 1; i > -1; i--) {
            if (lista.get(i).getFecha().after(desde) && lista.get(i).getFecha().before(hasta)) {
                panelSegregacion.add(lista.get(i));
            }
            panelSegregacion.revalidate();
            panelSegregacion.repaint();
        }
    }

    public static void updateStatus(int status, boolean b) {

        switch (status) {
            case 1:
                segregacion++;
                break;
            case 2:
                dictamen++;
                break;
            case 3:
                captura++;
                break;
            case 4:
                entregado++;
                break;
            default:
                break;
        }
        if (b) {
            switch (status) {
                case 1:
                    break;
                case 2:
                    segregacion--;
                    break;
                case 3:
                    dictamen--;
                    break;
                case 4:
                    captura--;
                default:
                    break;
            }
        }

    }

    private void searchFieldActionListener(ActionEvent e) {
        if (ListaCuadriculas.search(Integer.parseInt(searchField.getText()))) {
            panelSegregacion.removeAll();
            panelSegregacion.add(ListaCuadriculas.getCuadricula(Integer.parseInt(searchField.getText())));
            panelSegregacion.revalidate();
            panelSegregacion.repaint();
        } else {
            panelSegregacion.removeAll();
            JLabel label = new JLabel("Sin resultados", JLabel.CENTER);
            label.setFont(new Font(Font.SANS_SERIF, Font.BOLD, 18));
            panelSegregacion.add(label);
            panelSegregacion.revalidate();
            panelSegregacion.repaint();
        }

    }

    public void searchFieldKeyTypedListener(KeyEvent e) {
        char c = e.getKeyChar();
        if (!Character.isDigit(c)) {
            e.consume();
        }
    }

    public void searchFieldKeyPressedListener(KeyEvent e) {
    }

    public void searchFieldKeyReleasedListener(KeyEvent e) {
    }

    private int poxOfDevolucion(int fol) {
        int pox = 0;
        for (int i = 0; i < lista.size(); i++) {
            if (lista.get(i).getFolioSimple() == fol) {
                pox = i;
                break;
            }
        }
        return pox;
    }

    class CargandoDevoluciones implements Runnable {

        @Override
        public void run() {
            (new Thread(new Loading())).start();
            try {
                new Thread().sleep(500);
            } catch (InterruptedException e) {
            }
            llenarDatos();
            llenarPanel();
        }
    }

    class Loading implements Runnable {

        @Override
        public void run() {
            loading.setLoadingPanel();
        }
    }

    class LlenarDevoluciones implements Runnable {

        int y;

        @Override
        public void run() {

        }

    }
}
