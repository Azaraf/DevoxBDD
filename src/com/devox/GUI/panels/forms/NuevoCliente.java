/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.devox.GUI.panels.forms;

import org.inspira.devox.logger.Log;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.inspira.devox.database.DatabaseConnection;
import org.inspira.devox.services.clientes.AccionesCliente;
import org.inspira.devox.services.clientes.AccionesDivision;
import org.inspira.devox.services.clientes.AccionesFamilia;
import org.inspira.devox.shared.Cliente;
import org.inspira.devox.shared.Division;
import org.inspira.devox.shared.Familia;
import org.inspira.devox.shared.Shareable;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author azaraf
 */
public class NuevoCliente extends javax.swing.JFrame {

    private boolean UPDATE = false;

    /**
     * Creates new form NuevaTarima1
     */
    public NuevoCliente() {
        myInitComponents();
    }

    public NuevoCliente(String claveCliente, String nombreCliente, String nombreSucursal, String division, String canal, String RFC) {
        UPDATE = true;
        this.claveCliente = claveCliente;
        this.nombreCliente = nombreCliente;
        this.nombreSucursal = nombreSucursal;
        this.canal = canal;
        this.division = division;
        this.RFC = RFC;
        myInitComponents();
        campoCanalDeVenta.setText(canal);
        campoIdDivision.setText(division);
        campoIdSucursal.setText(claveCliente);
        campoNombreCliente.setText(nombreCliente);
        campoNombreSucursal.setText(nombreSucursal);
        campoRFC.setText(RFC);
        this.originalIdDivision = division;
        this.originalIdSucursal = claveCliente;
        this.originalRFC = RFC;
        editarSucursalcb.setSelected(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        barraSuperior = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        panelCancelar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelAceptar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        panelCampos = new javax.swing.JPanel();
        panelCliente = new javax.swing.JPanel();
        nuevoClientecb = new javax.swing.JCheckBox();
        comboClientes = new javax.swing.JComboBox();
        campoRFC = new javax.swing.JTextField();
        campoNombreCliente = new javax.swing.JTextField();
        editarClientecb = new javax.swing.JCheckBox();
        usarClientecb = new javax.swing.JCheckBox();
        panelSucursal = new javax.swing.JPanel();
        campoIdSucursal = new javax.swing.JTextField();
        campoNombreSucursal = new javax.swing.JTextField();
        nuevaSucursalcb = new javax.swing.JCheckBox();
        editarSucursalcb = new javax.swing.JCheckBox();
        panelDivision = new javax.swing.JPanel();
        nuevaDivisioncb = new javax.swing.JCheckBox();
        campoDivision = new javax.swing.JTextField();
        comboDivisiones = new javax.swing.JComboBox();
        campoIdDivision = new javax.swing.JTextField();
        editarDivisioncb = new javax.swing.JCheckBox();
        usarDivisioncb = new javax.swing.JCheckBox();
        panelCanalDeVenta = new javax.swing.JPanel();
        nuevoCanalcb = new javax.swing.JCheckBox();
        comboCanalesDeVenta = new javax.swing.JComboBox();
        campoCanalDeVenta = new javax.swing.JTextField();
        editarCanalcb = new javax.swing.JCheckBox();
        usarCanalcb = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        barraSuperior.setBackground(new java.awt.Color(9, 91, 173));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 2, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(250, 250, 250));
        jLabel3.setText("   Nuevo Cliente");

        javax.swing.GroupLayout barraSuperiorLayout = new javax.swing.GroupLayout(barraSuperior);
        barraSuperior.setLayout(barraSuperiorLayout);
        barraSuperiorLayout.setHorizontalGroup(
            barraSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        barraSuperiorLayout.setVerticalGroup(
            barraSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        panelCancelar.setBackground(new java.awt.Color(255, 102, 102));

        jLabel1.setForeground(new java.awt.Color(250, 250, 250));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cancelar");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelCancelarLayout = new javax.swing.GroupLayout(panelCancelar);
        panelCancelar.setLayout(panelCancelarLayout);
        panelCancelarLayout.setHorizontalGroup(
            panelCancelarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCancelarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelCancelarLayout.setVerticalGroup(
            panelCancelarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCancelarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelAceptar.setBackground(new java.awt.Color(102, 204, 0));

        jLabel2.setForeground(new java.awt.Color(250, 250, 250));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Aceptar");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelAceptarLayout = new javax.swing.GroupLayout(panelAceptar);
        panelAceptar.setLayout(panelAceptarLayout);
        panelAceptarLayout.setHorizontalGroup(
            panelAceptarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAceptarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelAceptarLayout.setVerticalGroup(
            panelAceptarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAceptarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelCampos.setBackground(new java.awt.Color(250, 250, 250));

        panelCliente.setBackground(new java.awt.Color(250, 250, 250));
        panelCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));
        panelCliente.setDoubleBuffered(false);

        buttonGroup1.add(nuevoClientecb);
        nuevoClientecb.setText("Nuevo Cliente");
        nuevoClientecb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoClientecbActionPerformed(evt);
            }
        });

        comboClientes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        campoRFC.setEnabled(false);

        campoNombreCliente.setEnabled(false);

        buttonGroup1.add(editarClientecb);
        editarClientecb.setText("Editar cliente existente");
        editarClientecb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarClientecbActionPerformed(evt);
            }
        });

        buttonGroup1.add(usarClientecb);
        usarClientecb.setSelected(true);
        usarClientecb.setText("Usar cliente existente");
        usarClientecb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usarClientecbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelClienteLayout = new javax.swing.GroupLayout(panelCliente);
        panelCliente.setLayout(panelClienteLayout);
        panelClienteLayout.setHorizontalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panelClienteLayout.createSequentialGroup()
                            .addComponent(campoRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoNombreCliente))
                        .addGroup(panelClienteLayout.createSequentialGroup()
                            .addComponent(usarClientecb)
                            .addGap(32, 32, 32)
                            .addComponent(comboClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelClienteLayout.createSequentialGroup()
                        .addComponent(nuevoClientecb)
                        .addGap(18, 18, 18)
                        .addComponent(editarClientecb)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelClienteLayout.setVerticalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usarClientecb))
                .addGap(10, 10, 10)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nuevoClientecb)
                    .addComponent(editarClientecb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoRFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelSucursal.setBackground(new java.awt.Color(250, 250, 250));
        panelSucursal.setBorder(javax.swing.BorderFactory.createTitledBorder("Sucursal"));

        buttonGroup2.add(nuevaSucursalcb);
        nuevaSucursalcb.setSelected(true);
        nuevaSucursalcb.setText("Nueva sucursal");

        buttonGroup2.add(editarSucursalcb);
        editarSucursalcb.setText("Editar sucursal existente");

        javax.swing.GroupLayout panelSucursalLayout = new javax.swing.GroupLayout(panelSucursal);
        panelSucursal.setLayout(panelSucursalLayout);
        panelSucursalLayout.setHorizontalGroup(
            panelSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSucursalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSucursalLayout.createSequentialGroup()
                        .addComponent(campoIdSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(campoNombreSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelSucursalLayout.createSequentialGroup()
                        .addComponent(nuevaSucursalcb)
                        .addGap(18, 18, 18)
                        .addComponent(editarSucursalcb)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelSucursalLayout.setVerticalGroup(
            panelSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSucursalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevaSucursalcb)
                    .addComponent(editarSucursalcb))
                .addGap(4, 4, 4)
                .addGroup(panelSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoIdSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNombreSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        panelDivision.setBackground(new java.awt.Color(250, 250, 250));
        panelDivision.setBorder(javax.swing.BorderFactory.createTitledBorder("División"));
        panelDivision.setEnabled(false);

        buttonGroup3.add(nuevaDivisioncb);
        nuevaDivisioncb.setText("Nueva División");
        nuevaDivisioncb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevaDivisioncbActionPerformed(evt);
            }
        });

        campoDivision.setEnabled(false);

        campoIdDivision.setEnabled(false);

        buttonGroup3.add(editarDivisioncb);
        editarDivisioncb.setText("Editar división existente");
        editarDivisioncb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarDivisioncbActionPerformed(evt);
            }
        });

        buttonGroup3.add(usarDivisioncb);
        usarDivisioncb.setSelected(true);
        usarDivisioncb.setText("Usar división existente");
        usarDivisioncb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usarDivisioncbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDivisionLayout = new javax.swing.GroupLayout(panelDivision);
        panelDivision.setLayout(panelDivisionLayout);
        panelDivisionLayout.setHorizontalGroup(
            panelDivisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDivisionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDivisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nuevaDivisioncb)
                    .addComponent(usarDivisioncb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campoIdDivision))
                .addGap(18, 18, 18)
                .addGroup(panelDivisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboDivisiones, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarDivisioncb))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDivisionLayout.setVerticalGroup(
            panelDivisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDivisionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDivisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboDivisiones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usarDivisioncb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(panelDivisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nuevaDivisioncb)
                    .addComponent(editarDivisioncb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDivisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoDivision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoIdDivision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        panelCanalDeVenta.setBackground(new java.awt.Color(250, 250, 250));
        panelCanalDeVenta.setBorder(javax.swing.BorderFactory.createTitledBorder("Canal de venta"));
        panelCanalDeVenta.setEnabled(false);

        buttonGroup4.add(nuevoCanalcb);
        nuevoCanalcb.setText("Nuevo Canal de Venta");
        nuevoCanalcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoCanalcbActionPerformed(evt);
            }
        });

        campoCanalDeVenta.setEnabled(false);

        buttonGroup4.add(editarCanalcb);
        editarCanalcb.setText("Editar canal de venta existente");
        editarCanalcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarCanalcbActionPerformed(evt);
            }
        });

        buttonGroup4.add(usarCanalcb);
        usarCanalcb.setSelected(true);
        usarCanalcb.setText("Usar canal de venta existente");
        usarCanalcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usarCanalcbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCanalDeVentaLayout = new javax.swing.GroupLayout(panelCanalDeVenta);
        panelCanalDeVenta.setLayout(panelCanalDeVentaLayout);
        panelCanalDeVentaLayout.setHorizontalGroup(
            panelCanalDeVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCanalDeVentaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCanalDeVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCanalDeVentaLayout.createSequentialGroup()
                        .addComponent(nuevoCanalcb)
                        .addGap(18, 18, 18)
                        .addComponent(editarCanalcb)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCanalDeVentaLayout.createSequentialGroup()
                        .addGroup(panelCanalDeVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(campoCanalDeVenta, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCanalDeVentaLayout.createSequentialGroup()
                                .addComponent(usarCanalcb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboCanalesDeVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelCanalDeVentaLayout.setVerticalGroup(
            panelCanalDeVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCanalDeVentaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCanalDeVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comboCanalesDeVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usarCanalcb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCanalDeVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nuevoCanalcb, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(editarCanalcb, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(campoCanalDeVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout panelCamposLayout = new javax.swing.GroupLayout(panelCampos);
        panelCampos.setLayout(panelCamposLayout);
        panelCamposLayout.setHorizontalGroup(
            panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelSucursal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDivision, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelCanalDeVenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelCamposLayout.setVerticalGroup(
            panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDivision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCanalDeVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(barraSuperior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(panelAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(barraSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        cancelar();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        aceptar();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void nuevoClientecbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoClientecbActionPerformed
        comboClientes.setEnabled(!nuevoClientecb.isSelected());
        campoRFC.setEnabled(nuevoClientecb.isSelected());
        campoNombreCliente.setEnabled(nuevoClientecb.isSelected());
    }//GEN-LAST:event_nuevoClientecbActionPerformed

    private void nuevaDivisioncbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevaDivisioncbActionPerformed
        comboDivisiones.setEnabled(!nuevaDivisioncb.isSelected());
        campoDivision.setEnabled(nuevaDivisioncb.isSelected());
        campoIdDivision.setEnabled(nuevaDivisioncb.isSelected());
    }//GEN-LAST:event_nuevaDivisioncbActionPerformed

    private void nuevoCanalcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoCanalcbActionPerformed
        comboCanalesDeVenta.setEnabled(!nuevoCanalcb.isSelected());
        campoCanalDeVenta.setEnabled(nuevoCanalcb.isSelected());
    }//GEN-LAST:event_nuevoCanalcbActionPerformed

    private void editarClientecbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarClientecbActionPerformed
        comboClientes.setEnabled(!editarClientecb.isSelected());
        campoRFC.setEnabled(editarClientecb.isSelected());
        campoNombreCliente.setEnabled(editarClientecb.isSelected());
    }//GEN-LAST:event_editarClientecbActionPerformed

    private void editarDivisioncbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarDivisioncbActionPerformed
        comboDivisiones.setEnabled(!editarDivisioncb.isSelected());
        campoDivision.setEnabled(editarDivisioncb.isSelected());
        campoIdDivision.setEnabled(editarDivisioncb.isSelected());
    }//GEN-LAST:event_editarDivisioncbActionPerformed

    private void editarCanalcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarCanalcbActionPerformed
        comboCanalesDeVenta.setEnabled(!nuevoCanalcb.isSelected());
        campoCanalDeVenta.setEnabled(nuevoCanalcb.isSelected());
    }//GEN-LAST:event_editarCanalcbActionPerformed

    private void usarClientecbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usarClientecbActionPerformed
        comboClientes.setEnabled(usarClientecb.isSelected());
        campoRFC.setEnabled(!usarClientecb.isSelected());
        campoNombreCliente.setEnabled(!usarClientecb.isSelected());
    }//GEN-LAST:event_usarClientecbActionPerformed

    private void usarDivisioncbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usarDivisioncbActionPerformed
        // TODO add your handling code here:
        comboDivisiones.setEnabled(usarDivisioncb.isSelected());
        campoIdDivision.setEnabled(!usarDivisioncb.isSelected());
        campoDivision.setEnabled(!usarDivisioncb.isSelected());
    }//GEN-LAST:event_usarDivisioncbActionPerformed

    private void usarCanalcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usarCanalcbActionPerformed
        comboCanalesDeVenta.setEnabled(usarCanalcb.isSelected());
        campoCanalDeVenta.setEnabled(!usarCanalcb.isSelected());
    }//GEN-LAST:event_usarCanalcbActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barraSuperior;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JTextField campoCanalDeVenta;
    private javax.swing.JTextField campoDivision;
    private javax.swing.JTextField campoIdDivision;
    private javax.swing.JTextField campoIdSucursal;
    private javax.swing.JTextField campoIdSucursal1;
    private javax.swing.JTextField campoNombreCliente;
    private javax.swing.JTextField campoNombreSucursal;
    private javax.swing.JTextField campoNombreSucursal1;
    private javax.swing.JTextField campoRFC;
    private javax.swing.JComboBox comboCanalesDeVenta;
    private javax.swing.JComboBox comboClientes;
    private javax.swing.JComboBox comboDivisiones;
    private javax.swing.JCheckBox editarCanalcb;
    private javax.swing.JCheckBox editarClientecb;
    private javax.swing.JCheckBox editarDivisioncb;
    private javax.swing.JCheckBox editarSucursalcb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JCheckBox nuevaDivisioncb;
    private javax.swing.JCheckBox nuevaSucursalcb;
    private javax.swing.JCheckBox nuevoCanalcb;
    private javax.swing.JCheckBox nuevoClientecb;
    private javax.swing.JPanel panelAceptar;
    private javax.swing.JPanel panelCampos;
    private javax.swing.JPanel panelCanalDeVenta;
    private javax.swing.JPanel panelCancelar;
    private javax.swing.JPanel panelCliente;
    private javax.swing.JPanel panelDivision;
    private javax.swing.JPanel panelSucursal;
    private javax.swing.JCheckBox usarCanalcb;
    private javax.swing.JCheckBox usarClientecb;
    private javax.swing.JCheckBox usarDivisioncb;
    // End of variables declaration//GEN-END:variables

    private List<String> listaCanales;
    private List<Division> listaCanalesObjects;
    private AccionesDivision canales;
    private List<String> listaClientes;
    private AccionesCliente clientes;
    private List<String> listaDivisiones;
    private List<Familia> listaDivisionesObjects;
    private AccionesFamilia divisiones;
    private Division canalObj;
    private String claveCliente;
    private String nombreCliente;
    private String nombreSucursal;
    private String canal;
    private String division;
    private String idDivision;
    private String RFC;
    private String originalRFC;
    private String originalIdSucursal;
    private String originalIdDivision;
    private int position;

    public void setPosition(int position) {
        this.position = position;
    }

    private void aceptar() {
        canalObj = new Division();
        if (nuevoClientecb.isSelected() || editarClientecb.isSelected()) {
            RFC = campoRFC.getText();
            nombreCliente = campoNombreCliente.getText();
        } else {
            String c1 = comboClientes.getSelectedItem().toString();
            String c2[] = c1.split(" – ");
            RFC = c2[0];
            nombreCliente = c2[1];
        }
        claveCliente = campoIdSucursal.getText();
        nombreSucursal = campoNombreSucursal.getText();
        if (nuevaDivisioncb.isSelected() || editarDivisioncb.isSelected()) {
            idDivision = campoIdDivision.getText();
            division = campoDivision.getText();
        } else {
            String d1 = comboDivisiones.getSelectedItem().toString();
            String d2[] = d1.split(" – ");
            idDivision = d2[0];
            division = d2[1];

        }

        if (nuevoCanalcb.isSelected() || editarCanalcb.isSelected()) {
            canal = campoCanalDeVenta.getText();
        } else {
            canal = comboCanalesDeVenta.getSelectedItem().toString();
        }
        for (Division s : listaCanalesObjects) {
            if (s.getNombre().equals(canal)) {
                canalObj = s;
                break;
            }
        }

        if (canal == null
                || RFC == null
                || nombreCliente == null
                || claveCliente == null
                || nombreSucursal == null
                || division == null) {
            JOptionPane.showMessageDialog(null, "Hay campos vacíos", "Validar datos", JOptionPane.OK_OPTION);
        }
        DatabaseConnection db = new DatabaseConnection();
        try {
            Connection con = db.getConnection();
            if (nuevoCanalcb.isSelected()) {
                PreparedStatement st = con.prepareStatement("INSERT INTO division (nombre) VALUES (?)");
                st.setString(1, canal);
                st.executeUpdate();
            }
            if (editarCanalcb.isSelected()) {
                PreparedStatement st = con.prepareStatement("UPDATE division set nombre = ? where idDivision = ? ");
                st.setString(1, canal);
                st.setInt(2, canalObj.getIdDivision());
                st.executeUpdate();
            }

            if(usarCanalcb.isSelected()){
                PreparedStatement st = con.prepareStatement("UPDATE cliente SET Division_idDivision=? WHERE RFC=?");
                st.setInt(1, canalObj.getIdDivision());
                st.setString(2, RFC);
                st.executeUpdate();
                
            }
            
            if (nuevaDivisioncb.isSelected()) {
                PreparedStatement st = con.prepareStatement("INSERT INTO familia (idFamilia, Descripcion) VALUES(?, ?)");
                st.setString(1, idDivision);
                st.setString(2, division);
                st.executeUpdate();
            }
            if (editarDivisioncb.isSelected()) {
                PreparedStatement st = con.prepareStatement("UPDATE familia SET idFamilia = ?, Descripcion = ? where idFamilia = ?");
                st.setString(1, idDivision);
                st.setString(2, division);
                st.setString(3, originalIdDivision);
                st.executeUpdate();
            }

            if (nuevoClientecb.isSelected()) {
                PreparedStatement st = con.prepareStatement("INSERT INTO cliente (RFC, nombre, Division_idDivision) VALUES(?, ?, ?)");
                st.setString(1, RFC);
                st.setString(2, nombreCliente);
                st.setInt(3, canalObj.getIdDivision());
                st.executeUpdate();
            }
            if (editarClientecb.isSelected()) {
                PreparedStatement st = con.prepareStatement("UPDATE cliente SET RFC = ?, nombre = ?, Division_idDivision = ? where RFC = ?");
                st.setString(1, RFC);
                st.setString(2, nombreCliente);
                st.setInt(3, canalObj.getIdDivision());
                st.setString(4, originalRFC);
                st.executeUpdate();
            }

            if (editarSucursalcb.isSelected()) {
                PreparedStatement st = con.prepareStatement("UPDATE sucursal SET idSucursal = ?, Familia_idFamilia = ?, Nombre = ?, Cliente_RFC = ? WHERE idSucursal =?");
                st.setString(1, claveCliente);
                st.setString(2, idDivision);
                st.setString(3, nombreSucursal);
                st.setString(4, RFC);
                st.setString(5, originalIdSucursal);
                st.executeUpdate();
            }
            if (nuevaSucursalcb.isSelected()) {
                PreparedStatement st = con.prepareStatement("INSERT INTO sucursal (idSucursal, Familia_idFamilia, Nombre, Cliente_RFC) VALUES(?, ?, ?, ?)");
                st.setString(1, claveCliente);
                st.setString(2, idDivision);
                st.setString(3, nombreSucursal);
                st.setString(4, RFC);
                st.executeUpdate();
            }
            JOptionPane.showMessageDialog(null, "Guardado con éxito");
            dispose();
            Log.print("updated " + claveCliente + ", " + RFC + ", " + idDivision);
        } catch (SQLException ex) {
            Log.print(ex);
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al guardar");

        }
        db.closeConnection();
    }

    private void myInitComponents() {
        initComponents();
        PromptSupport.setPrompt("RFC", campoRFC);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, campoRFC);
        PromptSupport.setPrompt("Nombre del Cliente", campoNombreCliente);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, campoNombreCliente);

        PromptSupport.setPrompt("Clave de cliente", campoIdSucursal);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, campoIdSucursal);
        PromptSupport.setPrompt("Nombre de sucursal", campoNombreSucursal);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, campoNombreSucursal);

        PromptSupport.setPrompt("Descripción división", campoDivision);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, campoDivision);
        PromptSupport.setPrompt("Division", campoIdDivision);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, campoIdDivision);

        PromptSupport.setPrompt("Canal de venta", campoCanalDeVenta);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, campoCanalDeVenta);

        clientes = new AccionesCliente();
        listaClientes = new ArrayList<>();
        clientes.loadDatabaseInstances();
        for (Shareable s : clientes.getEntityInstances()) {
            listaClientes.add(((Cliente) s).getRfc() + " – " + ((Cliente) s).getNombre());
        }
        divisiones = new AccionesFamilia();
        listaDivisiones = new ArrayList<>();
        listaDivisionesObjects = new ArrayList<>();
        divisiones.loadDatabaseInstances();
        for (Shareable s : divisiones.getEntityInstances()) {
            listaDivisiones.add(((Familia) s).getCodigoFamilia() + " – " + ((Familia) s).getDescripcion());
            listaDivisionesObjects.add((Familia) s);
        }
        canales = new AccionesDivision();
        listaCanales = new ArrayList<>();
        listaCanalesObjects = new ArrayList<>();
        canales.loadDatabaseInstances();
        for (Shareable s : canales.getEntityInstances()) {
            listaCanales.add(((Division) s).getNombre());
            listaCanalesObjects.add((Division) s);
        }

        comboClientes.setModel(new DefaultComboBoxModel(listaClientes.toArray()));
        comboDivisiones.setModel(new DefaultComboBoxModel(listaDivisiones.toArray()));
        comboCanalesDeVenta.setModel(new DefaultComboBoxModel(listaCanales.toArray()));
        setVisible(true);
    }

    private void cancelar() {
        dispose();
    }

}
