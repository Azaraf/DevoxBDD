/*
 * Copyright (c) 2016, azaraf
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package com.devox.GUI.panels.forms;

import com.devox.GUI.tables.DevoxTableModel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.inspira.devox.services.clientes.AccionesFamilia;
import org.inspira.devox.services.productos.AccionesHistorialPrecio;
import org.inspira.devox.services.productos.AccionesProducto;
import org.inspira.devox.services.relaciones.AccionesSucursalHasProducto;
import org.inspira.devox.shared.Familia;
import org.inspira.devox.shared.Shareable;

/**
 *
 * @author azaraf
 */
public class NuevoProducto extends javax.swing.JFrame {

    /**
     * Creates new form NuevoProducto1
     */
    public NuevoProducto() {
        myInitComponents();
    }

    public NuevoProducto(String codigoDeBarras, String codigoInterno, String descripcion, String division) {
        myInitComponents();
        fieldCB.setText(codigoDeBarras);
        fieldCI.setText(codigoInterno);
        fieldDESC.setText(descripcion);
        this.idProductoOriginal = codigoInterno;
        AccionesFamilia a = new AccionesFamilia();
        a.loadDatabaseInstances();
        for (int i = 0; i < a.getEntityInstances().length; i++) {
            if (((Familia) a.getEntityInstances()[i]).getCodigoFamilia().equals(division)) {
                fieldCombo.setSelectedIndex(i);
                break;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        barraSuperior = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        fieldCB = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fieldCI = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fieldDESC = new javax.swing.JTextField();
        fieldCombo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        barraSuperior.setBackground(new java.awt.Color(9, 91, 173));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 2, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(250, 250, 250));
        jLabel3.setText("   Agregar Producto");

        javax.swing.GroupLayout barraSuperiorLayout = new javax.swing.GroupLayout(barraSuperior);
        barraSuperior.setLayout(barraSuperiorLayout);
        barraSuperiorLayout.setHorizontalGroup(
            barraSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );
        barraSuperiorLayout.setVerticalGroup(
            barraSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel2.setBackground(new java.awt.Color(250, 250, 250));

        jPanel3.setBackground(new java.awt.Color(250, 250, 250));

        jLabel1.setText("C贸digo de Barras");

        jLabel2.setText("C贸digo interno");

        fieldCI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCIActionPerformed(evt);
            }
        });
        fieldCI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldCIKeyTyped(evt);
            }
        });

        jLabel4.setText("Descripci贸n");

        fieldDESC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fieldDESCKeyPressed(evt);
            }
        });

        fieldCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldComboActionPerformed(evt);
            }
        });

        jLabel5.setText("Divisi贸n");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fieldCB, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fieldDESC, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fieldCI)
                    .addComponent(fieldCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(fieldCI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(fieldDESC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(15, 15, 15))
        );

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jScrollPane1)
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(9, 9, 9))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(barraSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(barraSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 786, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldCIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCIActionPerformed

    private void fieldComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldComboActionPerformed
        // TODO add your handling code here:
        String division = fieldCombo.getSelectedItem().toString();
        
        tabla.llenarDeDatos(new AccionesHistorialPrecio().loadSucursalesPorDivisionConPrecio(division, fieldCB.getText(), fieldCI.getText()));
    }//GEN-LAST:event_fieldComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (comprobar()) {
            darAlta();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void fieldCIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldCIKeyTyped
        // TODO add your handling code here:
        
        fieldCI.setText(fieldCI.getText().toUpperCase());
    }//GEN-LAST:event_fieldCIKeyTyped

    private void fieldDESCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldDESCKeyPressed
        // TODO add your handling code here:
        fieldCI.setText(fieldCI.getText().toUpperCase());
    }//GEN-LAST:event_fieldDESCKeyPressed

    public static void iniciar() {
        java.awt.EventQueue.invokeLater(() -> {
            new NuevoProducto().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barraSuperior;
    private javax.swing.JTextField fieldCB;
    private javax.swing.JTextField fieldCI;
    private javax.swing.JComboBox fieldCombo;
    private javax.swing.JTextField fieldDESC;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    private DevoxTableModel tabla;
    private String idProductoOriginal;

    private void myInitComponents() {
        initComponents();

        List<String> familias = new ArrayList<>();
        AccionesFamilia af = new AccionesFamilia();
        af.loadDatabaseInstances();

        for (Shareable s : af.getEntityInstances()) {
            familias.add(((Familia) s).getCodigoFamilia());
        }
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(familias.toArray());
        fieldCombo.setModel(dcbm);

        tabla = new DevoxTableModel(
                new String[]{"Clave cliente", "Cliente", "Sucursal", "Precio"},
                new boolean[]{false, false, false, true});
        tabla.setClasses(new Class[]{String.class, String.class, String.class, String.class});
        tabla.agregarTabla(jScrollPane1);

    }

    private boolean comprobar() {
        if (fieldCB.getText().isEmpty() || fieldCI.getText().isEmpty() || fieldDESC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hay campos vac铆os");
            return false;
        }
        return true;
    }

    private void darAlta() {
        AccionesProducto producto = new AccionesProducto();
        String idProducto = fieldCI.getText();
        String codigoBarras = fieldCB.getText();
        String descripcion = fieldDESC.getText();
        producto.setIdProducto(idProducto);
        producto.setDescripcion(descripcion);
        if (!producto.alta()) {
            JOptionPane.showMessageDialog(null, "El producto ya exist铆a. Se actualiza y se modifican precios");
            producto.cambio(idProductoOriginal);
        }
        for (int i = 0; i < tabla.getRowCount(); i++) {
            Float precio;
            try {
                precio = new Float(tabla.getValueAt(i, 3).toString());
            } catch (NumberFormatException e) {
                //JOptionPane.showMessageDialog(null, "Un campo de precios est谩 vac铆o, para el cliente " + tabla.getValueAt(i, 0).toString());
                precio = 0f;
            }
            System.out.println("Precio: $" + precio);
            String idSucursal = tabla.getValueAt(i, 0).toString();
            AccionesHistorialPrecio historialPrecio = new AccionesHistorialPrecio();
            AccionesSucursalHasProducto sucursalHasProducto = new AccionesSucursalHasProducto();
            sucursalHasProducto.setIdProducto(idProducto);
            sucursalHasProducto.setIdSucursal(idSucursal);
            historialPrecio.setEan(codigoBarras);
            historialPrecio.setIdProducto(idProducto);
            historialPrecio.setIdSucursal(idSucursal);
            historialPrecio.setPrecio(precio);
            if (!sucursalHasProducto.alta()) {
                System.out.println("Esta sucursal " + idSucursal + " ya tiene el producto " + idProducto);
            }
            if (!historialPrecio.alta()) {
                //JOptionPane.showMessageDialog(null, "El precio solo se modifica para el cliente " + tabla.getValueAt(i, 0).toString());
                historialPrecio.cambio();
            }
        }
        dispose();
    }
}
