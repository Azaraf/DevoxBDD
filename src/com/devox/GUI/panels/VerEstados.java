/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.devox.GUI.panels;

import com.devox.GUI.Cargando;
import com.devox.GUI.PDF.CrearReportePorEstado;
import com.devox.LOG.Entidades.Configuraciones;
import com.devox.LOG.cuadricula.ListaCuadriculas;
import org.inspira.devox.logger.Log;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.inspira.devox.services.devolucion.AccionesDescripcionDevolucion;
import org.inspira.devox.services.devolucion.AccionesDescripcionDevolucionEstado;

/**
 *
 * @author azaraf
 */
public class VerEstados extends javax.swing.JPanel {

    private int quantityCaptura;
    private int quantityDictamen;
    private int quantityEntregado;
    private int quantitySegregacion;
    private AccionesDescripcionDevolucion descripcion;
    private AccionesDescripcionDevolucionEstado detallesEstado;
    List<CuadriculaLista> listaSeleccionadosSegregacion = new ArrayList<>();
    List<CuadriculaLista> listaSeleccionadosDictamen = new ArrayList<>();
    List<CuadriculaLista> listaSeleccionadosCaptura = new ArrayList<>();
    List<CuadriculaLista> listaSeleccionadosEntregado = new ArrayList<>();
    Cargando loading;

    /**
     * Creates new form VerDevoluciones
     *
     * @param frame
     */
    public VerEstados(JFrame frame) {
        initComponents();
        loading = new Cargando(frame);
        quantityCaptura = (Integer) spinnerCaptura.getValue();
        quantityDictamen = (Integer) spinnerDictamen.getValue();
        quantityEntregado = (Integer) spinnerEntregado.getValue();
        quantitySegregacion = (Integer) spinnerSegregados.getValue();
        descripcion = new AccionesDescripcionDevolucion();
        descripcion.loadDatabaseInstances();
        detallesEstado = new AccionesDescripcionDevolucionEstado();
        detallesEstado.loadDatabaseInstances();
        CargandoDevoluciones c = new CargandoDevoluciones();
        jScrollPane1.getHorizontalScrollBar().setUnitIncrement(20);
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(20);
        jScrollPane2.getHorizontalScrollBar().setUnitIncrement(20);
        jScrollPane2.getVerticalScrollBar().setUnitIncrement(20);
        jScrollPane3.getHorizontalScrollBar().setUnitIncrement(20);
        jScrollPane3.getVerticalScrollBar().setUnitIncrement(20);
        jScrollPane4.getHorizontalScrollBar().setUnitIncrement(20);
        jScrollPane4.getVerticalScrollBar().setUnitIncrement(20);
        cargar(c);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rangosSegregados = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        rangoBoton = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jFileChooser1 = new javax.swing.JFileChooser();
        rangosDictamen = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        rangoBoton1 = new javax.swing.JButton();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        rangosCaptura = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        rangoBoton2 = new javax.swing.JButton();
        jDateChooser5 = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDateChooser6 = new com.toedter.calendar.JDateChooser();
        rangosEntregado = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        rangoBoton3 = new javax.swing.JButton();
        jDateChooser7 = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser8 = new com.toedter.calendar.JDateChooser();
        panel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelSegregacion = new javax.swing.JPanel();
        botonSelectAllSegregacion = new javax.swing.JButton();
        botonUnSelectAllSegregacion = new javax.swing.JButton();
        botonSelectRange1 = new javax.swing.JButton();
        botonCambiarADictamen = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        spinnerSegregados = new javax.swing.JSpinner();
        panel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        panelDictamen = new javax.swing.JPanel();
        botonSelectAllDictamen = new javax.swing.JButton();
        botonUnSelectAllDictamen = new javax.swing.JButton();
        botonSelectRangeDictamen = new javax.swing.JButton();
        botonImprimirDictaminados = new javax.swing.JButton();
        botonCambiarACaptura = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        spinnerDictamen = new javax.swing.JSpinner();
        panel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        panelCaptura = new javax.swing.JPanel();
        botonSelectAllCaptura = new javax.swing.JButton();
        botonUnSelectAllCaptura = new javax.swing.JButton();
        botonSelectRangeCaptura = new javax.swing.JButton();
        botonCambiarAEntregado = new javax.swing.JButton();
        botonImprimirCaptura = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        spinnerCaptura = new javax.swing.JSpinner();
        panel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        panelEntregado = new javax.swing.JPanel();
        botonSelectAllEntregados = new javax.swing.JButton();
        botonUnSelectAllEntregados = new javax.swing.JButton();
        botonSelectRangeEntregados = new javax.swing.JButton();
        botonImprimirEntregados = new javax.swing.JButton();
        spinnerEntregado = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();

        rangosSegregados.setTitle("Seleccione rango de fechas");
        rangosSegregados.setBackground(new java.awt.Color(250, 250, 250));
        rangosSegregados.setMinimumSize(new java.awt.Dimension(320, 180));
        rangosSegregados.setPreferredSize(new java.awt.Dimension(320, 180));
        rangosSegregados.setSize(new java.awt.Dimension(320, 180));

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));

        rangoBoton.setText("OK");
        rangoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rangoBotonActionPerformed(evt);
            }
        });

        jLabel2.setText("A:");

        jLabel1.setText("De:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(rangoBoton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(10, 10, 10)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rangoBoton)
                .addContainerGap())
        );

        javax.swing.GroupLayout rangosSegregadosLayout = new javax.swing.GroupLayout(rangosSegregados.getContentPane());
        rangosSegregados.getContentPane().setLayout(rangosSegregadosLayout);
        rangosSegregadosLayout.setHorizontalGroup(
            rangosSegregadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rangosSegregadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        rangosSegregadosLayout.setVerticalGroup(
            rangosSegregadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rangosSegregadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);

        rangosDictamen.setTitle("Seleccione rango de fechas");
        rangosDictamen.setBackground(new java.awt.Color(250, 250, 250));
        rangosDictamen.setMinimumSize(new java.awt.Dimension(320, 180));
        rangosDictamen.setPreferredSize(new java.awt.Dimension(320, 180));
        rangosDictamen.setSize(new java.awt.Dimension(320, 180));

        jPanel2.setBackground(new java.awt.Color(250, 250, 250));

        rangoBoton1.setText("OK");
        rangoBoton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rangoBoton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("A:");

        jLabel4.setText("De:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(rangoBoton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(10, 10, 10)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser3, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rangoBoton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout rangosDictamenLayout = new javax.swing.GroupLayout(rangosDictamen.getContentPane());
        rangosDictamen.getContentPane().setLayout(rangosDictamenLayout);
        rangosDictamenLayout.setHorizontalGroup(
            rangosDictamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rangosDictamenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        rangosDictamenLayout.setVerticalGroup(
            rangosDictamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rangosDictamenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        rangosCaptura.setTitle("Seleccione rango de fechas");
        rangosCaptura.setBackground(new java.awt.Color(250, 250, 250));
        rangosCaptura.setMinimumSize(new java.awt.Dimension(320, 180));
        rangosCaptura.setPreferredSize(new java.awt.Dimension(320, 180));
        rangosCaptura.setSize(new java.awt.Dimension(320, 180));

        jPanel3.setBackground(new java.awt.Color(250, 250, 250));

        rangoBoton2.setText("OK");
        rangoBoton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rangoBoton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("A:");

        jLabel6.setText("De:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(rangoBoton2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(10, 10, 10)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser5, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jDateChooser6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jDateChooser5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rangoBoton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout rangosCapturaLayout = new javax.swing.GroupLayout(rangosCaptura.getContentPane());
        rangosCaptura.getContentPane().setLayout(rangosCapturaLayout);
        rangosCapturaLayout.setHorizontalGroup(
            rangosCapturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rangosCapturaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        rangosCapturaLayout.setVerticalGroup(
            rangosCapturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rangosCapturaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        rangosEntregado.setTitle("Seleccione rango de fechas");
        rangosEntregado.setBackground(new java.awt.Color(250, 250, 250));
        rangosEntregado.setMinimumSize(new java.awt.Dimension(320, 180));
        rangosEntregado.setPreferredSize(new java.awt.Dimension(320, 180));
        rangosEntregado.setSize(new java.awt.Dimension(320, 180));

        jPanel4.setBackground(new java.awt.Color(250, 250, 250));

        rangoBoton3.setText("OK");
        rangoBoton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rangoBoton3ActionPerformed(evt);
            }
        });

        jLabel7.setText("A:");

        jLabel8.setText("De:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(rangoBoton3))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(10, 10, 10)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser7, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jDateChooser8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jDateChooser7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rangoBoton3)
                .addContainerGap())
        );

        javax.swing.GroupLayout rangosEntregadoLayout = new javax.swing.GroupLayout(rangosEntregado.getContentPane());
        rangosEntregado.getContentPane().setLayout(rangosEntregadoLayout);
        rangosEntregadoLayout.setHorizontalGroup(
            rangosEntregadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rangosEntregadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        rangosEntregadoLayout.setVerticalGroup(
            rangosEntregadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rangosEntregadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBackground(new java.awt.Color(250, 250, 250));
        setMinimumSize(new java.awt.Dimension(720, 1600));
        setPreferredSize(new java.awt.Dimension(720, 1600));
        setLayout(new java.awt.GridLayout(4, 1, 10, 3));

        panel1.setBackground(new java.awt.Color(250, 250, 250));
        panel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Segregación", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(50, 50, 50))); // NOI18N
        panel1.setPreferredSize(new java.awt.Dimension(720, 300));

        panelSegregacion.setBackground(new java.awt.Color(250, 250, 250));
        panelSegregacion.setLayout(new java.awt.GridLayout(0, 1, 5, 10));
        jScrollPane1.setViewportView(panelSegregacion);

        botonSelectAllSegregacion.setText("Seleccionar todos");
        botonSelectAllSegregacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectAllSegregacionActionPerformed(evt);
            }
        });

        botonUnSelectAllSegregacion.setText("Deseleccionar todos");
        botonUnSelectAllSegregacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUnSelectAllSegregacionActionPerformed(evt);
            }
        });

        botonSelectRange1.setText("Seleccionar por rango");
        botonSelectRange1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectRange1ActionPerformed(evt);
            }
        });

        botonCambiarADictamen.setText("Cambiar a Dictamen");
        botonCambiarADictamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCambiarADictamenActionPerformed(evt);
            }
        });

        jLabel9.setText("Ver últimos");

        spinnerSegregados.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(0), null, Integer.valueOf(1)));
        spinnerSegregados.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerSegregadosStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addComponent(botonSelectAllSegregacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonUnSelectAllSegregacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonSelectRange1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonCambiarADictamen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spinnerSegregados, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 261, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(spinnerSegregados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonSelectAllSegregacion)
                        .addComponent(botonUnSelectAllSegregacion)
                        .addComponent(botonSelectRange1)
                        .addComponent(botonCambiarADictamen))))
        );

        add(panel1);

        panel2.setBackground(new java.awt.Color(250, 250, 250));
        panel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dictamen", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(9, 91, 173))); // NOI18N
        panel2.setPreferredSize(new java.awt.Dimension(720, 300));

        panelDictamen.setBackground(new java.awt.Color(250, 250, 250));
        panelDictamen.setLayout(new java.awt.GridLayout(0, 1, 5, 10));
        jScrollPane2.setViewportView(panelDictamen);

        botonSelectAllDictamen.setText("Seleccionar todos");
        botonSelectAllDictamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectAllDictamenActionPerformed(evt);
            }
        });

        botonUnSelectAllDictamen.setText("Deseleccionar todos");
        botonUnSelectAllDictamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUnSelectAllDictamenActionPerformed(evt);
            }
        });

        botonSelectRangeDictamen.setText("Seleccionar por rango");
        botonSelectRangeDictamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectRangeDictamenActionPerformed(evt);
            }
        });

        botonImprimirDictaminados.setText("Imprimir");
        botonImprimirDictaminados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImprimirDictaminadosActionPerformed(evt);
            }
        });

        botonCambiarACaptura.setText("Cambiar a Captura");
        botonCambiarACaptura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCambiarACapturaActionPerformed(evt);
            }
        });

        jLabel10.setText("Ver últimos");

        spinnerDictamen.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(0), null, Integer.valueOf(1)));
        spinnerDictamen.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerDictamenStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addComponent(botonSelectAllDictamen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonUnSelectAllDictamen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonSelectRangeDictamen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonImprimirDictaminados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonCambiarACaptura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spinnerDictamen, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(174, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(spinnerDictamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonSelectAllDictamen)
                        .addComponent(botonUnSelectAllDictamen)
                        .addComponent(botonSelectRangeDictamen)
                        .addComponent(botonImprimirDictaminados)
                        .addComponent(botonCambiarACaptura))))
        );

        add(panel2);

        panel3.setBackground(new java.awt.Color(250, 250, 250));
        panel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Captura DLX", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(255, 102, 102))); // NOI18N
        panel3.setPreferredSize(new java.awt.Dimension(720, 300));

        panelCaptura.setBackground(new java.awt.Color(250, 250, 250));
        panelCaptura.setLayout(new java.awt.GridLayout(0, 1, 5, 10));
        jScrollPane3.setViewportView(panelCaptura);

        botonSelectAllCaptura.setText("Seleccionar todos");
        botonSelectAllCaptura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectAllCapturaActionPerformed(evt);
            }
        });

        botonUnSelectAllCaptura.setText("Deseleccionar todos");
        botonUnSelectAllCaptura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUnSelectAllCapturaActionPerformed(evt);
            }
        });

        botonSelectRangeCaptura.setText("Seleccionar por rango");
        botonSelectRangeCaptura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectRangeCapturaActionPerformed(evt);
            }
        });

        botonCambiarAEntregado.setText("Cambiar a Entregado");
        botonCambiarAEntregado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCambiarAEntregadoActionPerformed(evt);
            }
        });

        botonImprimirCaptura.setText("Imprimir y cambiar a Entregado");
        botonImprimirCaptura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImprimirCapturaActionPerformed(evt);
            }
        });

        jLabel11.setText("Ver últimos");

        spinnerCaptura.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(0), null, Integer.valueOf(1)));
        spinnerCaptura.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerCapturaStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addComponent(botonSelectAllCaptura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonUnSelectAllCaptura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonSelectRangeCaptura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonCambiarAEntregado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonImprimirCaptura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spinnerCaptura, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(spinnerCaptura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonSelectAllCaptura)
                        .addComponent(botonUnSelectAllCaptura)
                        .addComponent(botonSelectRangeCaptura)
                        .addComponent(botonCambiarAEntregado)
                        .addComponent(botonImprimirCaptura))))
        );

        add(panel3);

        panel4.setBackground(new java.awt.Color(250, 250, 250));
        panel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Entregado", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(102, 204, 0))); // NOI18N
        panel4.setPreferredSize(new java.awt.Dimension(720, 300));

        panelEntregado.setBackground(new java.awt.Color(250, 250, 250));
        panelEntregado.setLayout(new java.awt.GridLayout(0, 1, 5, 10));
        jScrollPane4.setViewportView(panelEntregado);

        botonSelectAllEntregados.setText("Seleccionar todos");
        botonSelectAllEntregados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectAllEntregadosActionPerformed(evt);
            }
        });

        botonUnSelectAllEntregados.setText("Deseleccionar todos");
        botonUnSelectAllEntregados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUnSelectAllEntregadosActionPerformed(evt);
            }
        });

        botonSelectRangeEntregados.setText("Seleccionar por rango");
        botonSelectRangeEntregados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectRangeEntregadosActionPerformed(evt);
            }
        });

        botonImprimirEntregados.setText("Imprimir");
        botonImprimirEntregados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImprimirEntregadosActionPerformed(evt);
            }
        });

        spinnerEntregado.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(0), null, Integer.valueOf(1)));
        spinnerEntregado.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerEntregadoStateChanged(evt);
            }
        });

        jLabel12.setText("Ver últimos");

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addComponent(botonSelectAllEntregados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonUnSelectAllEntregados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonSelectRangeEntregados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonImprimirEntregados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spinnerEntregado, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 334, Short.MAX_VALUE))
            .addComponent(jScrollPane4)
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(spinnerEntregado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonSelectAllEntregados)
                        .addComponent(botonUnSelectAllEntregados)
                        .addComponent(botonSelectRangeEntregados)
                        .addComponent(botonImprimirEntregados))))
        );

        add(panel4);
    }// </editor-fold>//GEN-END:initComponents

    private void botonSelectAllSegregacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectAllSegregacionActionPerformed
        Log.print("Seleccionar todos los de segregacion");
        seleccionarTodos(listaSegregacion2, true);
    }//GEN-LAST:event_botonSelectAllSegregacionActionPerformed

    private void botonUnSelectAllSegregacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUnSelectAllSegregacionActionPerformed
        seleccionarTodos(listaSegregacion2, false);
    }//GEN-LAST:event_botonUnSelectAllSegregacionActionPerformed

    private void botonSelectRange1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectRange1ActionPerformed
        rangosSegregados.setVisible(true);
    }//GEN-LAST:event_botonSelectRange1ActionPerformed

    private void rangoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rangoBotonActionPerformed
        Date desde = jDateChooser1.getDate();
        Date hasta = jDateChooser2.getDate();
        rangosSegregados.setVisible(false);
        seleccionarRangos(listaSegregacion, true, desde, hasta);
    }//GEN-LAST:event_rangoBotonActionPerformed

    private void botonCambiarADictamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCambiarADictamenActionPerformed
        Log.print("Cambiar a Dictamen");
        cambiarEstado(listaSegregacion, listaSegregacion2, listaDictamen);
    }//GEN-LAST:event_botonCambiarADictamenActionPerformed

    private void botonCambiarACapturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCambiarACapturaActionPerformed
        Log.print("Cambiar a Captura DLX");
        cambiarEstado(listaDictamen, listaDictamen2, listaCaptura);
    }//GEN-LAST:event_botonCambiarACapturaActionPerformed

    private void botonCambiarAEntregadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCambiarAEntregadoActionPerformed
        Log.print("Cambiar a Entregado");
        cambiarEstado(listaCaptura, listaCaptura2, listaEntregado);
    }//GEN-LAST:event_botonCambiarAEntregadoActionPerformed

    private void botonImprimirDictaminadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImprimirDictaminadosActionPerformed
        Log.print("Solo imprimir los que estan en dictamen");
        imprimirLista(listaDictamen);
    }//GEN-LAST:event_botonImprimirDictaminadosActionPerformed

    private void botonImprimirEntregadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImprimirEntregadosActionPerformed
        Log.print("Imprimir entregados");
        imprimirLista(listaEntregado);
        JOptionPane.showMessageDialog(null, "Documento guardado!");
    }//GEN-LAST:event_botonImprimirEntregadosActionPerformed

    private void botonSelectAllDictamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectAllDictamenActionPerformed
        Log.print("Seleccionar todos los de dictamen");
        seleccionarTodos(listaDictamen2, true);
    }//GEN-LAST:event_botonSelectAllDictamenActionPerformed

    private void botonUnSelectAllDictamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUnSelectAllDictamenActionPerformed
        seleccionarTodos(listaDictamen2, false);
    }//GEN-LAST:event_botonUnSelectAllDictamenActionPerformed

    private void botonSelectAllCapturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectAllCapturaActionPerformed
        Log.print("Seleccionar todos los de captura");
        seleccionarTodos(listaCaptura2, true);
    }//GEN-LAST:event_botonSelectAllCapturaActionPerformed

    private void botonUnSelectAllCapturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUnSelectAllCapturaActionPerformed
        seleccionarTodos(listaCaptura2, false);
    }//GEN-LAST:event_botonUnSelectAllCapturaActionPerformed

    private void botonSelectAllEntregadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectAllEntregadosActionPerformed
        Log.print("Seleccionar todos los de entregado");
        seleccionarTodos(listaEntregado2, true);
    }//GEN-LAST:event_botonSelectAllEntregadosActionPerformed

    private void botonUnSelectAllEntregadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUnSelectAllEntregadosActionPerformed
        seleccionarTodos(listaEntregado2, false);
    }//GEN-LAST:event_botonUnSelectAllEntregadosActionPerformed

    private void rangoBoton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rangoBoton1ActionPerformed
        Date desde = jDateChooser3.getDate();
        Date hasta = jDateChooser4.getDate();
        rangosDictamen.setVisible(false);
        seleccionarRangos(listaDictamen, true, desde, hasta);
    }//GEN-LAST:event_rangoBoton1ActionPerformed

    private void rangoBoton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rangoBoton2ActionPerformed
        Date desde = jDateChooser5.getDate();
        Date hasta = jDateChooser6.getDate();
        rangosCaptura.setVisible(false);
        seleccionarRangos(listaCaptura, true, desde, hasta);
    }//GEN-LAST:event_rangoBoton2ActionPerformed

    private void rangoBoton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rangoBoton3ActionPerformed
        Date desde = jDateChooser7.getDate();
        Date hasta = jDateChooser8.getDate();
        rangosEntregado.setVisible(false);
        seleccionarRangos(listaEntregado, true, desde, hasta);
    }//GEN-LAST:event_rangoBoton3ActionPerformed

    private void botonImprimirCapturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImprimirCapturaActionPerformed
        Log.print("Imprimir y cambiar a Entregado");
        List<CuadriculaLista> temp = new ArrayList<>(listaCaptura2);
        cambiarEstado(listaCaptura, listaCaptura2, listaEntregado);
        Collections.sort(temp);
        Collections.reverse(temp);
        List<List<Object>> lislis = new ArrayList<>();
        for (CuadriculaLista listaSeleccionado : temp) {
            List<Object> lis = new ArrayList<>();
            lis.add(listaSeleccionado.getFolio());
            lis.add(listaSeleccionado.getDestino());
            lislis.add(lis);
        }

        Object[][] data = new Object[lislis.size()][];
        for (int h = 0; h < lislis.size(); h++) {
            data[h] = lislis.get(h).toArray();
        }
        int size = temp.size();
        System.out.println("size: " + size);
        if (size > 0) {
            CrearReportePorEstado pdf = new CrearReportePorEstado(data, temp.get(0).getEstado(), temp.get(0).getFecha(), temp.get(size - 1).getFecha());

            pdf.crear(new File(new Configuraciones().getPath() + "/Folios_" + temp.get(0).getEstado() + "_" + new SimpleDateFormat("dd_MM_yyyy").format(new Date()) + ".pdf"));
            JOptionPane.showMessageDialog(null, "Documento guardado!");
            Log.print("Guardado pdf \"/Folios_" + temp.get(0).getEstado() + "_" + new SimpleDateFormat("dd_MM_yyyy").format(new Date()) + ".pdf\"));");
        } else {
            JOptionPane.showMessageDialog(null, "No se puede hacer el documento sin al\n"
                    + "menos una devolución seleccionada.", "Sin folios seleccionados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonImprimirCapturaActionPerformed

    private void botonSelectRangeDictamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectRangeDictamenActionPerformed
        rangosDictamen.setVisible(true);
    }//GEN-LAST:event_botonSelectRangeDictamenActionPerformed

    private void botonSelectRangeCapturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectRangeCapturaActionPerformed
        rangosCaptura.setVisible(true);
    }//GEN-LAST:event_botonSelectRangeCapturaActionPerformed

    private void botonSelectRangeEntregadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectRangeEntregadosActionPerformed
        rangosEntregado.setVisible(true);
    }//GEN-LAST:event_botonSelectRangeEntregadosActionPerformed

    private void spinnerSegregadosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerSegregadosStateChanged
        // TODO add your handling code here:
        quantitySegregacion = (Integer) spinnerSegregados.getValue();
        ListaCuadriculas.getLastDevolucionesPorEstado(listaSegregacion, quantitySegregacion, "segregación");
        llenarPanel(panelSegregacion, listaSegregacion, quantitySegregacion, listaSegregacion2);
    }//GEN-LAST:event_spinnerSegregadosStateChanged

    private void spinnerDictamenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerDictamenStateChanged
        // TODO add your handling code here:
        quantityDictamen = (Integer) spinnerDictamen.getValue();
        ListaCuadriculas.getLastDevolucionesPorEstado(listaDictamen, quantityDictamen, "dictamen");
        llenarPanel(panelDictamen, listaDictamen, quantityDictamen, listaDictamen2);
    }//GEN-LAST:event_spinnerDictamenStateChanged

    private void spinnerCapturaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerCapturaStateChanged
        // TODO add your handling code here:
        quantityCaptura = (Integer) spinnerCaptura.getValue();
        ListaCuadriculas.getLastDevolucionesPorEstado(listaCaptura, quantityCaptura, "captura DLX");
        
        llenarPanel(panelCaptura, listaCaptura, quantityCaptura, listaCaptura2);
    }//GEN-LAST:event_spinnerCapturaStateChanged

    private void spinnerEntregadoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerEntregadoStateChanged
        // TODO add your handling code here:
        quantityEntregado = (Integer) spinnerEntregado.getValue();
        ListaCuadriculas.getLastDevolucionesPorEstado(listaEntregado, quantityEntregado, "entregado");
        llenarPanel(panelEntregado, listaEntregado, quantityEntregado, listaEntregado2);
    }//GEN-LAST:event_spinnerEntregadoStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCambiarACaptura;
    private javax.swing.JButton botonCambiarADictamen;
    private javax.swing.JButton botonCambiarAEntregado;
    private javax.swing.JButton botonImprimirCaptura;
    private javax.swing.JButton botonImprimirDictaminados;
    private javax.swing.JButton botonImprimirEntregados;
    private javax.swing.JButton botonSelectAllCaptura;
    private javax.swing.JButton botonSelectAllDictamen;
    private javax.swing.JButton botonSelectAllEntregados;
    private javax.swing.JButton botonSelectAllSegregacion;
    private javax.swing.JButton botonSelectRange1;
    private javax.swing.JButton botonSelectRangeCaptura;
    private javax.swing.JButton botonSelectRangeDictamen;
    private javax.swing.JButton botonSelectRangeEntregados;
    private javax.swing.JButton botonUnSelectAllCaptura;
    private javax.swing.JButton botonUnSelectAllDictamen;
    private javax.swing.JButton botonUnSelectAllEntregados;
    private javax.swing.JButton botonUnSelectAllSegregacion;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private com.toedter.calendar.JDateChooser jDateChooser5;
    private com.toedter.calendar.JDateChooser jDateChooser6;
    private com.toedter.calendar.JDateChooser jDateChooser7;
    private com.toedter.calendar.JDateChooser jDateChooser8;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JPanel panelCaptura;
    private javax.swing.JPanel panelDictamen;
    private javax.swing.JPanel panelEntregado;
    private javax.swing.JPanel panelSegregacion;
    private javax.swing.JButton rangoBoton;
    private javax.swing.JButton rangoBoton1;
    private javax.swing.JButton rangoBoton2;
    private javax.swing.JButton rangoBoton3;
    private javax.swing.JFrame rangosCaptura;
    private javax.swing.JFrame rangosDictamen;
    private javax.swing.JFrame rangosEntregado;
    private javax.swing.JFrame rangosSegregados;
    private javax.swing.JSpinner spinnerCaptura;
    private javax.swing.JSpinner spinnerDictamen;
    private javax.swing.JSpinner spinnerEntregado;
    private javax.swing.JSpinner spinnerSegregados;
    // End of variables declaration//GEN-END:variables
    private List<CuadriculaLista> listaCaptura = new ArrayList<>();
    private List<CuadriculaLista> listaDictamen = new ArrayList<>();
    private List<CuadriculaLista> listaEntregado = new ArrayList<>();
    private List<CuadriculaLista> listaSegregacion = new ArrayList<>();

    private List<CuadriculaLista> listaCaptura2 = new ArrayList<>();
    private List<CuadriculaLista> listaDictamen2 = new ArrayList<>();
    private List<CuadriculaLista> listaEntregado2 = new ArrayList<>();
    private List<CuadriculaLista> listaSegregacion2 = new ArrayList<>();

    private void llenarDatos() {
        ListaCuadriculas.getLastDevolucionesPorEstado(listaSegregacion, quantitySegregacion, "segregación");
        ListaCuadriculas.getLastDevolucionesPorEstado(listaDictamen, quantityDictamen, "dictamen");
        ListaCuadriculas.getLastDevolucionesPorEstado(listaCaptura, quantityCaptura, "captura DLX");
        ListaCuadriculas.getLastDevolucionesPorEstado(listaEntregado, quantityEntregado, "entregado");
        
//        if (y > 15) {
//            int j = 1;
//            for (int i = (y - 1); i > (y - 15); i--) {
//                loading.setProgresoEstados(j, 15, "segregación");
//                j++;
//                listaSegregacion.add(ListaCuadriculas.getCuadricula(ListaDeDevoluciones.getSegregados().get(i)));
//            }
//            LlenarDevoluciones llenarSegregacion = new LlenarDevoluciones();
//            llenarSegregacion.c = y;
//            llenarSegregacion.listaDestino = ListaDeDevoluciones.getSegregados();
//            llenarSegregacion.listaOrigen = listaSegregacion;
//            (new Thread(llenarSegregacion)).start();
//
//        } else {
//            for (int i = 0; i < y; i++) {
//                loading.setProgresoEstados((i + 1), y, "segregación");
//                listaSegregacion.add(ListaCuadriculas.getCuadricula(ListaDeDevoluciones.getSegregados().get(i)));
//            }
//        }
//        y = ListaDeDevoluciones.getDictaminados().size();
//        if (y > 15) {
//            int j = 1;
//            for (int i = (y - 1); i > (y - 15); i--) {
//                loading.setProgresoEstados(j, 15, "dictamen");
//                j++;
//                listaDictamen.add(ListaCuadriculas.getCuadricula(ListaDeDevoluciones.getDictaminados().get(i)));
//            }
//            LlenarDevoluciones llenarDictaminados = new LlenarDevoluciones();
//            llenarDictaminados.c = y;
//            llenarDictaminados.listaDestino = ListaDeDevoluciones.getDictaminados();
//            llenarDictaminados.listaOrigen = listaDictamen;
//            (new Thread(llenarDictaminados)).start();
//
//        } else {
//            for (int i = 0; i < y; i++) {
//                loading.setProgresoEstados((i + 1), y, "dictamen");
//                listaDictamen.add(ListaCuadriculas.getCuadricula(ListaDeDevoluciones.getDictaminados().get(i)));
//            }
//        }
//        y = ListaDeDevoluciones.getCapturados().size();
//        if (y > 15) {
//            int j = 1;
//            for (int i = (y - 1); i > (y - 15); i--) {
//                loading.setProgresoEstados(j, 15, "captura DLX");
//                j++;
//                listaCaptura.add(ListaCuadriculas.getCuadricula(ListaDeDevoluciones.getCapturados().get(i)));
//            }
//            LlenarDevoluciones llenarCapturados = new LlenarDevoluciones();
//            llenarCapturados.c = y;
//            llenarCapturados.listaDestino = ListaDeDevoluciones.getCapturados();
//            llenarCapturados.listaOrigen = listaCaptura;
//            (new Thread(llenarCapturados)).start();
//
//        } else {
//            for (int i = 0; i < y; i++) {
//                loading.setProgresoEstados((i + 1), y, "captura DLX");
//                listaCaptura.add(ListaCuadriculas.getCuadricula(ListaDeDevoluciones.getCapturados().get(i)));
//            }
//        }
//        y = ListaDeDevoluciones.getEntregados().size();
//        if (y > 15) {
//            int j = 1;
//            for (int i = (y - 1); i > (y - 15); i--) {
//                loading.setProgresoEstados(j, 15, "entregado");
//                j++;
//                listaEntregado.add(ListaCuadriculas.getCuadricula(ListaDeDevoluciones.getEntregados().get(i)));
//            }
//            LlenarDevoluciones llenarEntregados = new LlenarDevoluciones();
//            llenarEntregados.c = y;
//            llenarEntregados.listaDestino = ListaDeDevoluciones.getEntregados();
//            llenarEntregados.listaOrigen = listaEntregado;
//            (new Thread(llenarEntregados)).start();
//
//        } else {
//            for (int i = 0; i < y; i++) {
//                loading.setProgresoEstados((i + 1), y, "entregado");
//                listaEntregado.add(ListaCuadriculas.getCuadricula(ListaDeDevoluciones.getEntregados().get(i)));
//            }
//        }
                
    }

    private void llenarPanel(JPanel panel, List<CuadriculaLista> lista, int quantity, List<CuadriculaLista> lista2) {
        Collections.sort(lista);
        Collections.reverse(lista);
        panel.removeAll();
        lista2.clear();
        int limit = lista.size();
        if (limit >= quantity) {
            for (int i = limit - 1; i >= limit - quantity; i--) {
                CuadriculaLista c = lista.get(i);
                c.crearCuadricula();
                lista2.add(c);
            }
        } else {
            for (int i = limit - 1; i >= 0; i--) {
                CuadriculaLista c = lista.get(i);
                c.crearCuadricula();
                lista2.add(c);
            }
        }

        Collections.sort(lista2);

        for (CuadriculaLista c : lista2) {
            panel.add(c);
        }

        panel.revalidate();
        panel.repaint();
    }

    private void seleccionarTodos(List<CuadriculaLista> lista, boolean what) {
        lista.stream().map((c) -> {
            c.setjCheckBox1(what);
            return c;
        }).map((c) -> {
            c.revalidate();
            return c;
        }).forEach((c) -> {
            c.repaint();
        });
    }

    private void seleccionarRangos(List<CuadriculaLista> lista, boolean what, Date desde, Date hasta) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss");
        Log.print("Seleccionara los folios entre " + sdf.format(desde) + " hasta " + sdf.format(hasta));
        for (CuadriculaLista c : lista) {
            if (c.getFecha().after(desde) && c.getFecha().before(hasta)) {
                Log.print("Selecciono folio " + c.getFolio() + " en " + c.getEstado());
                c.setjCheckBox1(what);
            }
            c.revalidate();
            c.repaint();
        }
    }

    private void llenarPaneles() {
        llenarPanel(panelSegregacion, listaSegregacion, quantitySegregacion, listaSegregacion2);
        llenarPanel(panelDictamen, listaDictamen, quantityDictamen, listaDictamen2);
        llenarPanel(panelCaptura, listaCaptura, quantityCaptura, listaCaptura2);
        llenarPanel(panelEntregado, listaEntregado, quantityEntregado, listaEntregado2);
        revalidate();
        repaint();
    }

    private void llenarPanelesFirst() {
        llenarPaneles();
        loading.removeLoadingPanel();
    }

    private void cambiarEstado(List<CuadriculaLista> listaProcedencia, List<CuadriculaLista> listaSeleccionados, List<CuadriculaLista> listaDestino) {
        List<Integer> eliminar = new ArrayList<>();
        int todos = listaProcedencia.size();
        int selex = listaSeleccionados.size();
        int minimo = todos - selex;
        for (int i = todos - 1; i >= minimo; i--) {
            if (listaProcedencia.get(i).getjCheckBox1()) {
                Log.print("Cambia folio " + listaProcedencia.get(i).getFolio() + " en " + listaProcedencia.get(i).getEstado());
                listaDestino.add(listaProcedencia.get(i));
                listaProcedencia.get(i).cambiarEstado();
                listaProcedencia.get(i).repaint();
                listaProcedencia.get(i).setjCheckBox1(false);
                eliminar.add(i);
            }
        }

        for (int i : eliminar) {
            listaProcedencia.remove(i);
        }

        llenarPaneles();

    }

    private void imprimirLista(List<CuadriculaLista> lista) {
        List<CuadriculaLista> listaSeleccionados = new ArrayList<>();
        lista.stream().filter((c) -> (c.getjCheckBox1())).forEach((c) -> {
            listaSeleccionados.add(c);
        });
        List<List<Object>> lislis = new ArrayList<>();
        for (CuadriculaLista listaSeleccionado : listaSeleccionados) {
            List<Object> lis = new ArrayList<>();
            lis.add(listaSeleccionado.getFolio());
            lis.add(listaSeleccionado.getDestino());
            lislis.add(lis);
        }

        Object[][] data = new Object[lislis.size()][];
        for (int h = 0; h < lislis.size(); h++) {
            data[h] = lislis.get(h).toArray();
        }
        int size = listaSeleccionados.size();
        System.out.println("size: " + size);
        if (size > 0) {
            CrearReportePorEstado pdf = new CrearReportePorEstado(data, listaSeleccionados.get(0).getEstado(), listaSeleccionados.get(0).getFecha(), listaSeleccionados.get(size - 1).getFecha());

            pdf.crear(new File(new Configuraciones().getPath() + "/Folios_" + listaSeleccionados.get(0).getEstado() + "_" + new SimpleDateFormat("dd_MM_yyyy").format(new Date()) + ".pdf"));
            JOptionPane.showMessageDialog(null, "Documento guardado!");
            Log.print("Guardado pdf \"/Folios_" + listaSeleccionados.get(0).getEstado() + "_" + new SimpleDateFormat("dd_MM_yyyy").format(new Date()) + ".pdf\"));");
        } else {
            JOptionPane.showMessageDialog(null, "No se puede hacer el documento sin al\n"
                    + "menos una devolución seleccionada.", "Sin folios seleccionados", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cargar(CargandoDevoluciones c) {
        (new Thread(c)).start();
    }

    class CargandoDevoluciones implements Runnable {

        @Override
        public void run() {
            (new Thread(new Loading())).start();
            try {
                Thread.sleep(500);
            } catch (InterruptedException e) {
            }
            llenarDatos();
            llenarPanelesFirst();
        }
    }

    class Loading implements Runnable {

        @Override
        public void run() {
            loading.setLoadingPanel();
        }
    }

    class LlenarDevoluciones implements Runnable {

        int c;
        int q;
        List<CuadriculaLista> listaOrigen;
        List<Integer> listaDestino;

        @Override
        public void run() {
            for (int i = (c - 15); i >= q; i--) {
                listaOrigen.add(ListaCuadriculas.getCuadricula(listaDestino.get(i)));
            }
        }

    }
}
