/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.devox.GUI.panels;

import com.devox.GUI.panels.forms.NuevoPrecio;
import com.devox.GUI.tables.DevoxTableModel;
import com.devox.GUI.tables.LoadPrecios2;
import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.inspira.devox.services.LoadPreciosFromCSV;
import org.inspira.devox.services.devolucion.AccionesDevolucion;
import org.inspira.devox.services.queries.ReporteDePreciosPorFolio;
import org.inspira.devox.shared.Devolucion;
import org.inspira.devox.shared.Shareable;
import org.inspira.devox.views.PreciosView;
import org.jdesktop.swingx.JXSearchField;

/**
 *
 * @author azaraf
 */
public class VerPrecios extends javax.swing.JPanel {

    FileFilter filter;

    private JXSearchField searchField;
    private TableRowSorter<DefaultTableModel> sorter;

    /**
     * Creates new form Precios
     */
    public VerPrecios() {
        filter = new FileNameExtensionFilter("CSV", "csv");
        initComponents();
        view = new PreciosView();
        objs = view.obtenerVista();
        setNewTable();

        searchField = new JXSearchField("Buscar");
        searchField.setSize(363, 30);
        searchField.setInstantSearchDelay(100);
        searchField.setSearchMode(JXSearchField.SearchMode.INSTANT);
        searchField.setLayoutStyle(JXSearchField.LayoutStyle.VISTA);
        searchField.setPromptFontStyle(Font.ITALIC);

        searchField.addActionListener((ActionEvent e) -> {
            searchFieldActionListener(e);
        });
        searchPanel.add(searchField, BorderLayout.WEST);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();

        jFileChooser1.setFileFilter(filter);

        setBackground(new java.awt.Color(250, 250, 250));

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Precios"));

        jButton1.setText("Ver precios por folio");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Actualizar precios");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Insertar nuevo precio");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        searchPanel.setBackground(new java.awt.Color(255, 255, 255));
        searchPanel.setPreferredSize(new java.awt.Dimension(363, 30));

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AccionesDevolucion devolucion = new AccionesDevolucion();
        devolucion.loadDatabaseInstances();
        List<Integer> folios = new ArrayList<>();
        for (Shareable s : devolucion.getEntityInstances()) {
            folios.add(((Devolucion) s).getFolio());
        }
        Object verFolio = JOptionPane.showInputDialog(
                null,
                "Seleccione un folio:",
                "Ver precios por folio",
                JOptionPane.QUESTION_MESSAGE,
                null,
                folios.toArray(),
                folios.toArray()[0]
        );

        ReporteDePreciosPorFolio r = new ReporteDePreciosPorFolio();
        List<List<String>> li = r.obtenerReporteDePreciosConCantidad((Integer) verFolio);
        Object[][] o = new Object[li.size() - 1][];
        for (int i = 1; i < li.size(); i++) {
            o[i - 1] = li.get(i).toArray();
        }
        model.getTabla().removeAll();
        model = new DevoxTableModel(DevoxTableModel.columnsReportePreciosPorFolio, editables);
        model.agregarTabla(jScrollPane1);
        model.llenarDeDatos(o);
        model.getTabla().setSelectionMode(2);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jFileChooser1.showOpenDialog(this) == JFileChooser.OPEN_DIALOG) {
            LoadPreciosFromCSV load = new LoadPreciosFromCSV(jFileChooser1.getSelectedFile().getAbsolutePath());
            LoadPrecios2 l = new LoadPrecios2(load.loadDataWithTable());

        }
        view = new PreciosView();
        objs = view.obtenerVista();
        model.getTabla().removeAll();
        model = new DevoxTableModel(DevoxTableModel.columnsViewPrecios, editables);
        model.agregarTabla(jScrollPane1);
        model.llenarDeDatos(objs);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        NuevoPrecio np = new NuevoPrecio();
        np.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel searchPanel;
    // End of variables declaration//GEN-END:variables
    private DevoxTableModel model;
    private boolean[] editables;
    private Object[][] objs;
    private PreciosView view;

    private void setNewTable() {
        editables = new boolean[]{
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        };
        model = new DevoxTableModel(DevoxTableModel.columnsViewPrecios, editables);
        model.agregarTabla(jScrollPane1);
        model.llenarDeDatos(objs);
        
        sorter = new TableRowSorter<>(model);
        model.getTabla().setRowSorter(sorter);
    }

    private void searchFieldActionListener(ActionEvent e) {
        String busqueda = searchField.getText();
        System.out.println("busqueda: " + busqueda);
        
        RowFilter<DefaultTableModel, Object> rf = null;

        //If current expression doesn't parse, don't update.
        try {
            
            int[] indeces = new int[model.getColumnCount()];
            for(int i = 0; i < model.getColumnCount(); i++){
                indeces[i] = i;
            }
            rf = RowFilter.regexFilter(busqueda, indeces);
        } catch (java.util.regex.PatternSyntaxException ex) {
            ex.printStackTrace();
            return;
        }
        sorter.setRowFilter(rf);
        
    }
}
